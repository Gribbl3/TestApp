<?xml version="1.0" encoding="utf-8" ?>


<ContentPage
    x:Class="DirectoryApp.Pages.Register"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
>

    <!--  Styles -avoid repitition  -->
    <ContentPage.Resources>
        <!--  Label Style  -->
        <Style x:Key="labelStyle" TargetType="Label">
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="WidthRequest" Value="150" />
        </Style>
        <!--  Vertical StackLayout Style  -->
        <Style x:Key="verticalStackLayoutStyle" TargetType="VerticalStackLayout">
            <Setter Property="Padding" Value="10" />
            <Setter Property="Spacing" Value="10" />
            <Setter Property="WidthRequest" Value="500" />
        </Style>
        <!--  Button Style  -->
        <Style x:Key="buttonStyle" TargetType="Button">
            <Setter Property="BorderColor" Value="Black" />
            <Setter Property="FontAttributes" Value="Bold" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="WidthRequest" Value="100" />
        </Style>

        <!--  Entry Validation Color  -->


        <Style TargetType="Image">
            <Setter Property="WidthRequest" Value="25" />
            <Setter Property="WidthRequest" Value="20" />
        </Style>

        <Style TargetType="Entry">
            <Setter Property="WidthRequest" Value="250" />
        </Style>

        <Style TargetType="DatePicker">
            <Setter Property="WidthRequest" Value="250" />
        </Style>

        <Style TargetType="Picker">
            <Setter Property="WidthRequest" Value="250" />
        </Style>

    </ContentPage.Resources>


    <Grid
        Margin="10"
        ColumnDefinitions="50*, 50*"
        HorizontalOptions="Center"
        RowDefinitions="80*, 20*"
        RowSpacing="15"
        VerticalOptions="Center">



        <!--  left registration form  -->
        <!--  add comments each label and entry for documentation  -->


        <VerticalStackLayout Grid.Column="0" Style="{StaticResource Key=verticalStackLayoutStyle}">



            <HorizontalStackLayout Spacing="10" VerticalOptions="Center">

                <Label Style="{StaticResource labelStyle}" Text="Student ID" />

                <Border x:Name="borderStudentID" Stroke="black">
                    <Entry
                        x:Name="txtStudentID"
                        toolkit:SetFocusOnEntryCompletedBehavior.NextElement="{x:Reference txtFirstName}"
                        Keyboard="Numeric"
                        MaxLength="5"
                        Placeholder=""
                        ToolTipProperties.Text="Required. Numeric values only">
                        <Entry.Behaviors>
                            <toolkit:CharactersValidationBehavior
                                x:Name="validateBehaviorStudentID"
                                CharacterType="Digit"
                                Flags="ValidateOnValueChanged"
                                MinimumCharacterTypeCount="5" />
                        </Entry.Behaviors>
                    </Entry>
                    <Border.Triggers>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference validateBehaviorStudentID}, Path=IsValid}"
                            TargetType="Border"
                            Value="False">
                            <Setter Property="Stroke" Value="red" />
                        </DataTrigger>
                    </Border.Triggers>
                </Border>

                <Image>
                    <Image.Triggers>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference validateBehaviorStudentID}, Path=IsValid}"
                            TargetType="Image"
                            Value="True">
                            <Setter Property="Source" Value="check.png" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference validateBehaviorStudentID}, Path=IsValid}"
                            TargetType="Image"
                            Value="false">
                            <Setter Property="Source" Value="x_mark.png" />

                        </DataTrigger>
                    </Image.Triggers>
                </Image>

            </HorizontalStackLayout>


            <HorizontalStackLayout Spacing="10">

                <Label Style="{StaticResource labelStyle}" Text="First Name" />
                <Border Stroke="black">
                    <Entry
                        x:Name="txtFirstName"
                        toolkit:SetFocusOnEntryCompletedBehavior.NextElement="{x:Reference txtLastName}"
                        Placeholder=""
                        ToolTipProperties.Text="Required"
                        WidthRequest="250">
                        <Entry.Behaviors>
                            <toolkit:TextValidationBehavior
                                x:Name="validateBehaviorFirstName"
                                Flags="ValidateOnValueChanged"
                                MaximumLength="100"
                                MinimumLength="1" />
                        </Entry.Behaviors>
                    </Entry>
                    <Border.Triggers>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference validateBehaviorFirstName}, Path=IsValid}"
                            TargetType="Border"
                            Value="false">
                            <Setter Property="Stroke" Value="Red" />
                        </DataTrigger>
                    </Border.Triggers>
                </Border>

                <Image>
                    <Image.Triggers>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference validateBehaviorFirstName}, Path=IsValid}"
                            TargetType="Image"
                            Value="True">
                            <Setter Property="Source" Value="check.png" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference validateBehaviorFirstName}, Path=IsValid}"
                            TargetType="Image"
                            Value="false">
                            <Setter Property="Source" Value="x_mark.png" />
                        </DataTrigger>
                    </Image.Triggers>
                </Image>

            </HorizontalStackLayout>


            <HorizontalStackLayout Spacing="10">

                <Label Style="{StaticResource labelStyle}" Text="Last Name" />

                <Border Stroke="black">
                    <Entry
                        x:Name="txtLastName"
                        toolkit:SetFocusOnEntryCompletedBehavior.NextElement="{x:Reference txtEmail}"
                        Placeholder=""
                        ToolTipProperties.Text="Required"
                        WidthRequest="250">
                        <Entry.Behaviors>
                            <toolkit:TextValidationBehavior
                                x:Name="validateBehaviorLastName"
                                Flags="ValidateOnValueChanged"
                                MaximumLength="100"
                                MinimumLength="1"
                                ValidStyle="{StaticResource validEntryStyle}" />
                        </Entry.Behaviors>
                    </Entry>
                    <Border.Triggers>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference validateBehaviorLastName}, Path=IsValid}"
                            TargetType="Border"
                            Value="False">
                            <Setter Property="Stroke" Value="Red" />
                        </DataTrigger>
                    </Border.Triggers>
                </Border>

                <Image>
                    <Image.Triggers>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference validateBehaviorLastName}, Path=IsValid}"
                            TargetType="Image"
                            Value="True">
                            <Setter Property="Source" Value="check.png" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference validateBehaviorLastName}, Path=IsValid}"
                            TargetType="Image"
                            Value="false">
                            <Setter Property="Source" Value="x_mark.png" />
                        </DataTrigger>
                    </Image.Triggers>
                </Image>
            </HorizontalStackLayout>


            <HorizontalStackLayout Spacing="10">

                <Label Style="{StaticResource labelStyle}" Text="Email" />

                <Border Stroke="black">
                    <Entry
                        x:Name="txtEmail"
                        toolkit:SetFocusOnEntryCompletedBehavior.NextElement="{x:Reference txtPassword}"
                        Placeholder=""
                        ToolTipProperties.Text="Required">
                        <Entry.Behaviors>
                            <toolkit:EmailValidationBehavior
                                x:Name="validateBehaviorEmail"
                                Flags="ValidateOnValueChanged,ValidateOnUnfocusing"
                                ValidStyle="{StaticResource validEntryStyle}" />
                        </Entry.Behaviors>
                    </Entry>
                    <Border.Triggers>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference validateBehaviorEmail}, Path=IsValid}"
                            TargetType="Border"
                            Value="False">
                            <Setter Property="Stroke" Value="Red" />
                        </DataTrigger>
                    </Border.Triggers>
                </Border>

                <Image>
                    <Image.Triggers>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference validateBehaviorEmail}, Path=IsValid}"
                            TargetType="Image"
                            Value="True">

                            <Setter Property="Source" Value="check.png" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference validateBehaviorEmail}, Path=IsValid}"
                            TargetType="Image"
                            Value="false">
                            <Setter Property="Source" Value="x_mark.png" />

                        </DataTrigger>
                    </Image.Triggers>
                </Image>
            </HorizontalStackLayout>


            <HorizontalStackLayout Spacing="10">

                <Label Style="{StaticResource labelStyle}" Text="Password" />

                <Border Stroke="black">
                    <Entry
                        x:Name="txtPassword"
                        toolkit:SetFocusOnEntryCompletedBehavior.NextElement="{x:Reference txtConfirmPassword}"
                        ClearButtonVisibility="WhileEditing"
                        IsPassword="True"
                        Placeholder="********"
                        ToolTipProperties.Text="Required. Minimum of 8 characters.">
                        <Entry.Behaviors>
                            <toolkit:CharactersValidationBehavior
                                x:Name="validateBehaviorPassword"
                                CharacterType="Alphanumeric"
                                DecorationFlags="NullToEmpty"
                                Flags="ValidateOnValueChanged"
                                MinimumCharacterTypeCount="8" />
                        </Entry.Behaviors>
                    </Entry>
                    <Border.Triggers>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference validateBehaviorPassword}, Path=IsValid}"
                            TargetType="Border"
                            Value="False">
                            <Setter Property="Stroke" Value="Red" />
                        </DataTrigger>


                    </Border.Triggers>
                </Border>

                <Image>
                    <Image.Triggers>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference validateBehaviorPassword}, Path=IsValid}"
                            TargetType="Image"
                            Value="True">
                            <Setter Property="Source" Value="check.png" />

                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference validateBehaviorPassword}, Path=IsValid}"
                            TargetType="Image"
                            Value="false">
                            <Setter Property="Source" Value="x_mark.png" />

                        </DataTrigger>
                    </Image.Triggers>
                </Image>
            </HorizontalStackLayout>


            <HorizontalStackLayout Spacing="10">

                <Label Style="{StaticResource labelStyle}" Text="Confirm Password" />

                <Border x:Name="borderConfirmPassword"
                        Stroke="black">
                    <Entry
                        x:Name="txtConfirmPassword"
                        toolkit:SetFocusOnEntryCompletedBehavior.NextElement="{x:Reference txtMobileNumber}"
                        ClearButtonVisibility="WhileEditing"
                        IsPassword="True"
                        Placeholder="********">
                        <Entry.Behaviors>
                            <toolkit:RequiredStringValidationBehavior x:Name="validateBehaviorMatchPassword" RequiredString="{Binding Source={x:Reference txtPassword}, Path=Text}" 
                                                                      Flags="ValidateOnValueChanged"/>
                        </Entry.Behaviors>
                    </Entry>
                    <Border.Triggers>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference validateBehaviorMatchPassword}, Path=IsValid}"
                            TargetType="Border"
                            Value="False">
                            <Setter Property="Stroke" Value="Red" />
                        </DataTrigger>
                    </Border.Triggers>

                </Border>

                <Image x:Name="imgConfirmPassword">
                    <Image.Triggers>
                        
                        <DataTrigger
                            Binding="{Binding Source={x:Reference validateBehaviorMatchPassword}, Path=IsValid}"
                            TargetType="Image"
                            Value="false">
                            <Setter Property="Source" Value="x_mark.png" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference validateBehaviorMatchPassword}, Path=IsValid}"
                            TargetType="Image"
                            Value="True">
                            <Setter Property="Source" Value="check.png" />
                        </DataTrigger>

                    </Image.Triggers>
                    
                </Image>
            </HorizontalStackLayout>

            <HorizontalStackLayout
                HorizontalOptions="End"
                Spacing="5"
                WidthRequest="320">
                <Image>
                    <Image.Triggers>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference lblPasswordNotMatch}, Path=IsVisible}"
                            TargetType="Image"
                            Value="True">
                            <Setter Property="Source" Value="alert_triangle.png" />
                        </DataTrigger>
                    </Image.Triggers>
                </Image>
                <Label
                    x:Name="lblPasswordNotMatch"
                    HorizontalOptions="EndAndExpand"
                    Style="{StaticResource labelStyle}"
                    Text="Password does not match"
                    TextColor="Red"
                    WidthRequest="200">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding Source={x:Reference validateBehaviorMatchPassword}, Path=IsValid}"
                                     Value="True">
                            <Setter Property="IsVisible" Value="False" />
                        </DataTrigger>
                        

                    </Label.Triggers>
                </Label>
                
            </HorizontalStackLayout>
        </VerticalStackLayout>


        <!--  right registration form  -->

        <VerticalStackLayout Grid.Column="1" Style="{StaticResource Key=verticalStackLayoutStyle}">

            <!--  BackgroundColor="DarkGreen"  -->

            <HorizontalStackLayout Spacing="10" VerticalOptions="Center">
                <Label Style="{StaticResource labelStyle}" Text="Gender" />
                <RadioButton x:Name="rdoMale" Content="Male" />
                <RadioButton x:Name="rdoFemale" Content="Female" />
            </HorizontalStackLayout>


            <HorizontalStackLayout Spacing="10">
                <Label Style="{StaticResource labelStyle}" Text="Birth Date" />
                <Border x:Name="borderDatePicker"
                        Stroke="black">
                    <DatePicker
                        x:Name="dateBirthDate"
                        DateSelected="OnDateSelected"
                        MaximumDate="{Binding MaxDate}"
                        MinimumDate="{Binding MininumDate}" />
                    <Border.Triggers>
                        <DataTrigger TargetType="Border"
                                     Binding="{Binding Source={x:Reference dateBirthDate}, Path=Date}"
                                     Value="{x:Static sys:DateTime.Today}">
                            <Setter Property="Stroke" Value="Red" />
                        </DataTrigger>
                    </Border.Triggers>
                </Border>
                 
                <Image x:Name="imgDatePicker" />
            </HorizontalStackLayout>


            <HorizontalStackLayout Spacing="10">
                <Label Style="{StaticResource labelStyle}" Text="Mobile No." />
                <Border Stroke="black">
                    <Entry
                        x:Name="txtMobileNumber"
                        toolkit:SetFocusOnEntryCompletedBehavior.NextElement="{x:Reference txtCity}"
                        ToolTipProperties.Text="Number input only">
                        <Entry.Behaviors>
                            <toolkit:CharactersValidationBehavior
                                x:Name="validateBehaviorMobileNumber"
                                CharacterType="Digit"
                                DecorationFlags="NullToEmpty"
                                Flags="ValidateOnValueChanged"
                                MinimumCharacterTypeCount="11"
                                ValidStyle="{StaticResource validEntryStyle}" />
                        </Entry.Behaviors>
                    </Entry>
                    <Border.Triggers>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference validateBehaviorMobileNumber}, Path=IsValid}"
                            TargetType="Border"
                            Value="False">
                            <Setter Property="Stroke" Value="Red" />
                        </DataTrigger>
                    </Border.Triggers>
                </Border>

                <Image>
                    <Image.Triggers>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference validateBehaviorMobileNumber}, Path=IsValid}"
                            TargetType="Image"
                            Value="True">
                            <Setter Property="Source" Value="check.png" />

                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference validateBehaviorMobileNumber}, Path=IsValid}"
                            TargetType="Image"
                            Value="false">
                            <Setter Property="Source" Value="x_mark.png" />
                        </DataTrigger>
                    </Image.Triggers>
                </Image>
            </HorizontalStackLayout>

            <HorizontalStackLayout Spacing="10">
                <Label Style="{StaticResource labelStyle}" Text="City" />
                <Border Stroke="black">
                    <Entry
                        x:Name="txtCity"
                        toolkit:SetFocusOnEntryCompletedBehavior.NextElement="{x:Reference pickerSchoolProgram}"
                        Placeholder="Optional*" />
                </Border>
            </HorizontalStackLayout>

            <HorizontalStackLayout Spacing="10">

                <Label Style="{StaticResource labelStyle}" Text="School Program" />

                <Border x:Name="borderSchoolProgram" Stroke="black">
                    <Picker
                        x:Name="pickerSchoolProgram"
                        ItemsSource="{Binding SchoolProgram}"
                        SelectedIndexChanged="pickerSchoolProgram_SelectedIndexChanged" />
                </Border>
                <Image x:Name="imgPickerSchoolProgram" />

            </HorizontalStackLayout>

            <HorizontalStackLayout Spacing="10">

                <Label Style="{StaticResource labelStyle}" Text="Course" />

                <Border x:Name="borderCourse" Stroke="black">
                    <Picker
                        x:Name="pickerCourse"
                        ItemsSource="{Binding Courses}"
                        SelectedIndexChanged="pickerCourse_SelectedIndexChanged" />
                </Border>

                <Image x:Name="imgPickerCourse" />
            </HorizontalStackLayout>


            <HorizontalStackLayout Spacing="10">

                <Label Style="{StaticResource labelStyle}" Text="Year Level" />

                <Border x:Name="borderYearLevel" Stroke="black">
                    <Picker
                        x:Name="pickerYearLevel"
                        ItemsSource="{Binding YearLevel}"
                        SelectedIndexChanged="pickerYearLevel_SelectedIndexChanged" />
                </Border>

                <Image x:Name="imgPickerYearLevel" />

            </HorizontalStackLayout>
        </VerticalStackLayout>

        <!--  Bottom Buttons  -->
        <HorizontalStackLayout
            Grid.Row="1"
            Grid.ColumnSpan="2"
            Margin="20"
            HorizontalOptions="Center"
            Spacing="15"
            VerticalOptions="Center">

            <Button
                x:Name="btnSubmit"
                BackgroundColor="#008fff"
                Clicked="OnSubmitButtonClick"
                Style="{StaticResource buttonStyle}"
                Text="Submit" />

            <Button
                x:Name="btnReset"
                BackgroundColor="#abadaf"
                Clicked="OnResetButtonClick"
                Style="{StaticResource buttonStyle}"
                Text="Reset" />

        </HorizontalStackLayout>
    </Grid>
</ContentPage>